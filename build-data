#!/bin/bash
# build_data photos-directory

# TODO: deal with videos

if [ $# != 1 ]
then
  echo "Usage: $(basename $0) <photos-directory>"
  exit 1
fi

PHOTOS_ROOT="${1%/}"
PHOTOS_SMALL_ROOT="${PHOTOS_ROOT}-small"
PHOTOS_PREVIEW_ROOT="${PHOTOS_ROOT}-preview"
OUT="photos.json"

if [ -e "$OUT" ]
then
  echo "File '$OUT' already exists. Not overwriting."
  exit 1
fi

mkdir -p "$PHOTOS_SMALL_ROOT"
mkdir -p "$PHOTOS_PREVIEW_ROOT"
echo "{" > "$OUT"
echo "    \"photos\": [" >> "$OUT"

setcomma=0

while IFS= read -d $'\0' -r f
do
  echo -n "Processing file '$f'... "

  if ! exiftool -GPSLatitude "$f" | grep -q GPS
  then
    echo "has no GPS info"
    continue
  fi

  if file --mime-type "$f" | grep -q "video/[^ ]\+$"
  then
    echo "is a video"
    continue
  fi

  directory="${f%/*}"
  filename="${f##*/}"
  filetitle="${filename%.*}"
  extension="${filename##*.}"
  subdirectory="${directory#$PHOTOS_ROOT}"
  size="$(exiftool -ImageSize "$f" | awk '{print $4}')px"
  height="$(exiftool -ImageHeight "$f" | awk '{print $4}')"
  width="$(exiftool -ImageWidth "$f" | awk '{print $4}')"

  if exiftool -Orientation "$f" | grep -q Rotate
  then
    mogrify -auto-orient "$f"
  fi

  if [ $height -gt $width ]
  then
    previewsize=300x400
    rotation=1
  else
    previewsize=400x300
    rotation=0
  fi

  smalldirectory="$PHOTOS_SMALL_ROOT$subdirectory"
  smallf="$smalldirectory/$filetitle.small.$extension"
  mkdir -p "$smalldirectory"
  convert "$f" -resize 30% "$smallf"
  smallsize="$(exiftool -ImageSize "$smallf" | awk '{print $4}')px"

  previewdirectory="$PHOTOS_PREVIEW_ROOT$subdirectory"
  previewf="$previewdirectory/$filetitle.preview.$extension"
  mkdir -p "$previewdirectory"
  convert "$f" -resize $previewsize "$previewf"

  NSedLatitude="$(exiftool -GPSLatitude -c "+%.6f" "$f" | awk '{print $4,$5}')"
  NSedLatitude=${NSedLatitude#+}
  latitude=$(echo $NSedLatitude | awk '{print $1}')
  latSign=$(echo $NSedLatitude | awk '{print $2}')
  if [ x"$latSign" = "xS" ]
  then
    latitude=-$latitude
  fi
  NSedLongitude="$(exiftool -GPSLongitude -c "+%.6f" "$f" | awk '{print $4,$5}')"
  NSedLongitude=${NSedLongitude#+}
  longitude=$(echo $NSedLongitude | awk '{print $1}')
  lonSign=$(echo $NSedLongitude | awk '{print $2}')
  if [ x"$lonSign" = "xW" ]
  then
    longitude=-$longitude
  fi
  date="$(exiftool -DateTimeOriginal "$f" | awk {'print $4'} | sed 's_\([0-9]\+\):\([0-9]\+\):\([0-9]\+\)_\3/\2/\1_')"

  if [ $setcomma -eq 1 ]
  then
    echo "," >> "$OUT"
  else
    setcomma=1
  fi

  echo "        {" >> "$OUT"
  echo "            \"url_full\": \"$f\"," >> "$OUT"
  echo "            \"size_full\": \"$size\"," >> "$OUT"
  echo "            \"url_small\": \"$smallf\"," >> "$OUT"
  echo "            \"size_small\": \"$smallsize\"," >> "$OUT"
  echo "            \"url_preview\": \"$previewf\"," >> "$OUT"
  echo "            \"title\": \"$filetitle\"," >> "$OUT"
  echo "            \"folder\": \"$directory\"," >> "$OUT"
  echo "            \"latitude\": $latitude," >> "$OUT"
  echo "            \"longitude\": $longitude," >> "$OUT"
  echo "            \"rotation\": $rotation," >> "$OUT"
  echo "            \"date\": \"$date\"" >> "$OUT"
  echo -n "        }" >> "$OUT"

  echo "OK"
done < <(find $PHOTOS_ROOT -type f -print0)

echo >> "$OUT"
echo "    ]" >> "$OUT"
echo "}" >> "$OUT"

echo -n "Zipping folders... "
echo -n "full... "
zip -r "$PHOTOS_ROOT".zip . -i "$PHOTOS_ROOT/*"
echo -n "small... "
zip -r "$PHOTOS_SMALL_ROOT".zip . -i "$PHOTOS_SMALL_ROOT/*"
